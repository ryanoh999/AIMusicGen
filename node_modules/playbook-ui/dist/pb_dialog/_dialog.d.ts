import React from "react";
declare type DialogProps = {
    aria?: {
        [key: string]: string;
    };
    cancelButton?: string;
    children: React.ReactNode | React.ReactNode[] | string;
    className?: string;
    closeable: boolean;
    confirmButton?: string;
    data?: {
        [key: string]: string;
    };
    htmlOptions?: {
        [key: string]: string | number | boolean | (() => void);
    };
    id?: string;
    fullHeight?: boolean;
    loading?: boolean;
    onCancel?: () => void;
    onChange?: () => void;
    onClose?: () => void;
    onConfirm?: () => void;
    opened: boolean;
    portalClassName?: string;
    placement?: "left" | "center" | "right";
    shouldCloseOnOverlayClick: boolean;
    size?: "sm" | "md" | "lg" | "xl" | "status_size" | "content";
    status?: "info" | "caution" | "delete" | "error" | "success";
    text?: string;
    title?: string;
    trigger?: string;
};
declare const Dialog: {
    (props: DialogProps): React.ReactElement;
    Header: (props: {
        aria?: {
            [key: string]: string;
        };
        children: React.ReactNode | React.ReactNode[];
        className?: string;
        closeable?: boolean;
        data?: {
            [key: string]: string;
        };
        htmlOptions?: {
            [key: string]: string | number | boolean | (() => void);
        };
        id?: string;
        padding?: string;
        separator?: boolean;
        spacing?: "none" | "between" | "around" | "evenly";
        text?: string;
        title?: string;
    } & import("../utilities/globalProps").GlobalProps) => React.ReactElement<any, string | React.JSXElementConstructor<any>>;
    Body: (props: {
        children: React.ReactNode | React.ReactNode[];
        padding?: "md" | "lg" | "sm" | "xl" | "xs" | "xxs";
        className?: string;
    }) => React.ReactElement<any, string | React.JSXElementConstructor<any>>;
    Footer: (props: {
        aria?: {
            [key: string]: string;
        };
        children: React.ReactChild | React.ReactChild[];
        className?: string;
        data?: {
            [key: string]: string;
        };
        htmlOptions?: {
            [key: string]: string | number | boolean | (() => void);
        };
        id?: string;
        padding?: string;
        paddingBottom?: string;
        paddingX?: string;
        separator?: boolean;
        spacing?: "none" | "between" | "around" | "evenly";
    } & import("../utilities/globalProps").GlobalProps) => React.ReactElement<any, string | React.JSXElementConstructor<any>>;
};
export default Dialog;
