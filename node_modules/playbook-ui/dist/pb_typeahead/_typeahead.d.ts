import { Noop } from '../types';
/**
 * @typedef {object} Props
 * @prop {boolean} async - whether Typeahead should fetch data from
 * a remote location to populate the options
 * @prop {string} label - the text for the optional typeahead input label
 */
declare type TypeaheadProps = {
    async?: boolean;
    className?: string;
    components?: object;
    createable?: boolean;
    dark?: boolean;
    data?: {
        [key: string]: string;
    };
    error?: string;
    htmlOptions?: {
        [key: string]: string | number | boolean | (() => void);
    };
    id?: string;
    label?: string;
    loadOptions?: string | Noop;
    getOptionLabel?: string | (() => any);
    getOptionValue?: string | (() => any);
    name?: string;
};
export declare type SelectValueType = {
    label: string;
    value: string;
    imageUrl?: string;
};
/**
 * @constant {React.ReactComponent} Typeahead
 * @param {TypeaheadProps} props - props as described at https://react-select.com/props
 */
declare const Typeahead: ({ async, className, components, createable, error, data, getOptionLabel, getOptionValue, htmlOptions, id, loadOptions, ...props }: TypeaheadProps) => JSX.Element;
export default Typeahead;
