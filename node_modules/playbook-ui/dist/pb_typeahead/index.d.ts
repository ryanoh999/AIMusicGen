import PbEnhancedElement from '../pb_enhanced_element';
export default class PbTypeahead extends PbEnhancedElement {
    _searchInput: HTMLInputElement;
    _resultsElement: HTMLElement;
    _debouncedSearch: Function;
    _resultsLoadingIndicator: HTMLElement;
    _resultOptionTemplate: HTMLElement;
    _resultsOptionCache: Map<string, Array<DocumentFragment>>;
    _searchContext: string;
    static get selector(): string;
    connect(): void;
    handleKeydown(event: KeyboardEvent): void;
    search(): void;
    resultsCacheUpdate(searchTerm: string, searchContext: string, results: Array<DocumentFragment>): void;
    resultsCacheClear(): void;
    get debouncedSearch(): any;
    showResults(): void;
    optionSelected(event: MouseEvent): void;
    clearResults(): void;
    newResultOption(content: DocumentFragment): Element;
    focusPreviousOption(): void;
    focusNextOption(): void;
    get resultOptionItems(): Element[];
    get currentSelectedResultOptionItem(): Element;
    get searchInput(): HTMLInputElement;
    get searchTerm(): string;
    get searchContext(): string;
    set searchContext(value: string);
    get searchTermAndContext(): string;
    cacheKeyFor(searchTerm: string, searchContext: string): string;
    searchInputClear(): void;
    get searchTermMinimumLength(): string;
    get searchDebounceTimeout(): string;
    get resultsElement(): HTMLElement;
    get resultOptionTemplate(): HTMLElement;
    get resultsOptionCache(): Map<any, any>;
    get resultsLoadingIndicator(): HTMLElement;
    toggleResultsLoadingIndicator(visible: boolean): void;
}
